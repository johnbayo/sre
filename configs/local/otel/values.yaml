default:
  # List of environment variables applied to all components
  env:
    - name: OTEL_SERVICE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: "metadata.labels['app.kubernetes.io/component']"
    - name: OTEL_COLLECTOR_NAME
      value: '{{ include "otel-demo.name" . }}-otelcol'
    - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      value: cumulative
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo
  # Allows overriding and additions to .Values.default.env
  envOverrides: []
  #  - name: OTEL_K8S_NODE_NAME
  #    value: "someConstantValue"
  image:
    repository: ghcr.io/open-telemetry/demo
    # Overrides the image tag whose default is the chart appVersion.
    # The service's name will be applied to the end of this value.
    tag: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
  # Default # of replicas for all components
  replicas: 1
  # Default schedulingRules for all components
  schedulingRules:
    nodeSelector: {}
    affinity: {}
    tolerations: []
  # Default securityContext for all components
  securityContext: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

components:
  ## Demo Components are named objects (services) with several properties
  # demoService:
  ## Enable the component (service)
  #   enabled: true
  #   useDefault:
  ## Use default environment variables
  #     env: true
  ## Override Image repository and Tag. Tag will use appVersion as default.
  ## Component's name will be applied to end of this value.
  #   imageOverride: {}
  ## Optional service definitions to apply
  #   service:
  ## Service Type to use for this component. Default is ClusterIP.
  #     type: ClusterIP
  ## Service Port to use to expose this component. Default is nil
  #     port: 8080
  ## Service Node Port to use to expose this component on a NodePort service. Default is nil
  #     nodePort: 30080
  ## Service Annotations to add to this component
  #     annotations: {}
  ## Additional service ports to use to expose this component
  #   ports:
  #     - name: extraServicePort
  #       value: 8081
  ## Environment variables to add to the component's pod
  #   env:
  ## Environment variables that upsert (append + merge) into the `env` specification for this component.
  #   envOverrides:
  ## Pod Scheduling rules for nodeSelector, affinity, or tolerations.
  #   schedulingRules:
  #     nodeSelector: {}
  #     affinity: {}
  #     tolerations: []
  ## Pod Annotations to add to this component
  #   podAnnotations: {}
  ## Resources for this component
  #   resources: {}
  ## Container security context for setting user ID (UID), group ID (GID) and other security policies
  #   securityContext:
  ## Ingresses rules to add for the to the component
  # ingress:
  ## Enable the creation of Ingress rules. Default is false
  #   enabled: false
  ## Annotations to add to the ingress rule
  #   annotations: {}
  ## Which Ingress class (controller) to use. Default is unspecified.
  #   ingressClassName: nginx
  ## Hosts definitions for the Ingress rule
  #   hosts:
  #     - host: demo.example.com
  ## Each host can have multiple paths/routes
  #       paths:
  #         - path: /
  #           pathType: Prefix
  #           port: 8080
  ## Optional TLS specifications for the Ingress rule
  #   tls:
  #     - secretName: demo-tls
  #       hosts:
  #         - demo.example.com
  ## Additional ingresses - only created if ingress.enabled is true
  ## Useful for when differently annotated ingress services are required
  ## Each additional ingress needs key "name" set to something unique
  #   additionalIngresses: []
  #     - name: extra-demo-ingress
  #       ingressClassName: nginx
  #       annotations: {}
  #       hosts:
  #         - host: demo.example.com
  #           paths:
  #             - path: /
  #               pathType: Prefix
  #               port: 8080
  #       tls:
  #         - secretName: demo-tls
  #           hosts:
  #             - demo.example.com
  ## Command to use in the container spec, in case you don't want to go with the default command from the image.
  #   command: []
  ## Configuration to for this component; will create a Volume, and Mount backed by an optionally created ConfigMap.
  ## The name, mountPath are required, and one of existingConfigMap or data is required.
  ## If an existing ConfigMap is not provided, the contents under data will be used for the created ConfigMap.
  #   mountedConfigMaps: []
  #     - name: my-config
  #       mountPath: /etc/config
  #       subPath:
  #       exsitingConfigMap: my-configmap
  #       data:
  #         my-config.yaml: |
  #           key: value
  # # Kubernetes container health check options
  #   livenessProbe: {}
  # # Optional init container to run before the pod starts.
  #   initContainers:
  #     - name: <init-container-name>
  #       image: <init-container-image>
  #       command: [list of commands for the init container to run]
  # # Replicas for the component
  #  replicas: 1
  # # Optional pod security context for setting user ID (UID), group ID (GID) and other security policies
  # # This will be applied at pod level, can be applied globally for all pods: .Values.default.podSecurityContext
  # # Or it can be applied to a specific component: .Values.components.<component-name>.podSecurityContext
  #    podSecurityContext:
  #      runAsGroup: 65534
  #      runAsNonRoot: true
  #      runAsUser: 65534


  accountingService:
    enabled: true
    useDefault:
      env: true
    env:
      - name: KAFKA_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-kafka:9092'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317
    resources:
      limits:
        memory: 20Mi
    initContainers:
      - name: wait-for-kafka
        image: busybox:latest
        command: ['sh', '-c', 'until nc -z -v -w30 {{ include "otel-demo.name" . }}-kafka 9092; do echo waiting for kafka; sleep 2; done;']

  adService:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: AD_SERVICE_PORT
        value: "8080"
      - name: FEATURE_FLAG_GRPC_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-featureflagservice:50053'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4318
      - name: OTEL_LOGS_EXPORTER
        value: otlp
    resources:
      limits:
        memory: 300Mi

  cartService:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: CART_SERVICE_PORT
        value: "8080"
      - name: ASPNETCORE_URLS
        value: http://*:$(CART_SERVICE_PORT)
      - name: FEATURE_FLAG_GRPC_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-featureflagservice:50053'
      - name: REDIS_ADDR
        value: '{{ include "otel-demo.name" . }}-redis:6379'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317
    resources:
      limits:
        memory: 160Mi
    initContainers:
      - name: wait-for-redis
        image: busybox:latest
        command: ['sh', '-c', 'until nc -z -v -w30 {{ include "otel-demo.name" . }}-redis 6379; do echo waiting for redis; sleep 2; done;']

  checkoutService:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: CHECKOUT_SERVICE_PORT
        value: "8080"
      - name: CART_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-cartservice:8080'
      - name: CURRENCY_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-currencyservice:8080'
      - name: EMAIL_SERVICE_ADDR
        value: 'http://{{ include "otel-demo.name" . }}-emailservice:8080'
      - name: PAYMENT_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-paymentservice:8080'
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
      - name: SHIPPING_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-shippingservice:8080'
      - name: KAFKA_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-kafka:9092'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317
    resources:
      limits:
        memory: 20Mi
    initContainers:
      - name: wait-for-kafka
        image: busybox:latest
        command: ['sh', '-c', 'until nc -z -v -w30 {{ include "otel-demo.name" . }}-kafka 9092; do echo waiting for kafka; sleep 2; done;']

  currencyService:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: CURRENCY_SERVICE_PORT
        value: "8080"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317
      - name: VERSION
        value: "{{ .Chart.AppVersion }}"
    resources:
      limits:
        memory: 20Mi

  emailService:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: EMAIL_SERVICE_PORT
        value: "8080"
      - name: APP_ENV
        value: production
      - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4318/v1/traces
    resources:
      limits:
        memory: 100Mi

  featureflagService:
    enabled: true
    useDefault:
      env: true
    ports:
      - name: grpc
        value: 50053
      - name: http
        value: 8081
    env:
      - name: FEATURE_FLAG_SERVICE_PORT
        value: "8081"
      - name: FEATURE_FLAG_GRPC_SERVICE_PORT
        value: "50053"
      - name: DATABASE_URL
        value: 'ecto://ffs:ffs@{{ include "otel-demo.name" . }}-ffspostgres:5432/ffs'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317
      - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
        value: grpc
    resources:
      limits:
        memory: 175Mi
    livenessProbe:
      httpGet:
        path: /featureflags/
        port: 8081
      initialDelaySeconds: 30
      periodSeconds: 10
    initContainers:
      - name: wait-for-ffspostgres
        image: busybox:latest
        command: ['sh', '-c', 'until nc -z -v -w30 {{ include "otel-demo.name" . }}-ffspostgres 5432; do echo waiting for ffspostgres; sleep 2; done']

  frauddetectionService:
    enabled: true
    useDefault:
      env: true
    env:
      - name: KAFKA_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-kafka:9092'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4318
    resources:
      limits:
        memory: 200Mi
    initContainers:
      - name: wait-for-kafka
        image: busybox:latest
        command: ['sh', '-c', 'until nc -z -v -w30 {{ include "otel-demo.name" . }}-kafka 9092; do echo waiting for kafka; sleep 2; done;']

  frontend:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: FRONTEND_PORT
        value: "8080"
      - name: FRONTEND_ADDR
        value: :8080
      - name: AD_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-adservice:8080'
      - name: CART_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-cartservice:8080'
      - name: CHECKOUT_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-checkoutservice:8080'
      - name: CURRENCY_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-currencyservice:8080'
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
      - name: RECOMMENDATION_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-recommendationservice:8080'
      - name: SHIPPING_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-shippingservice:8080'
      - name: OTEL_COLLECTOR_HOST
        value: $(OTEL_COLLECTOR_NAME)
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317
      - name: WEB_OTEL_SERVICE_NAME
        value: frontend-web
      - name: PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
        value: http://localhost:8080/otlp-http/v1/traces             # This expects users to use `kubectl port-forward ...`
    resources:
      limits:
        memory: 200Mi
    securityContext:
      runAsUser: 1001  # nextjs
      runAsGroup: 1001
      runAsNonRoot: true

  frontendProxy:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: ENVOY_PORT
        value: "8080"
      - name: FRONTEND_PORT
        value: "8080"
      - name: FRONTEND_HOST
        value: '{{ include "otel-demo.name" . }}-frontend'
      - name: FEATURE_FLAG_SERVICE_PORT
        value: "8081"
      - name: FEATURE_FLAG_SERVICE_HOST
        value: '{{ include "otel-demo.name" . }}-featureflagservice'
      - name: LOCUST_WEB_PORT
        value: "8089"
      - name: LOCUST_WEB_HOST
        value: '{{ include "otel-demo.name" . }}-loadgenerator'
      - name: GRAFANA_SERVICE_PORT
        value: "80"
      - name: GRAFANA_SERVICE_HOST
        value: '{{ include "otel-demo.name" . }}-grafana'
      - name: JAEGER_SERVICE_PORT
        value: "16686"
      - name: JAEGER_SERVICE_HOST
        value: '{{ include "otel-demo.name" . }}-jaeger-query'
      - name: OTEL_COLLECTOR_PORT_GRPC
        value: "4317"
      - name: OTEL_COLLECTOR_PORT_HTTP
        value: "4318"
      - name: OTEL_COLLECTOR_HOST
        value: $(OTEL_COLLECTOR_NAME)
    resources:
      limits:
        memory: 50Mi
    securityContext:
      runAsUser: 101  # envoy
      runAsGroup: 101
      runAsNonRoot: true

  loadgenerator:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8089
    env:
      - name: LOCUST_WEB_PORT
        value: "8089"
      - name: LOCUST_USERS
        value: "10"
      - name: LOCUST_SPAWN_RATE
        value: "1"
      - name: LOCUST_HOST
        value: 'http://{{ include "otel-demo.name" . }}-frontendproxy:8080'
      - name: LOCUST_HEADLESS
        value: "false"
      - name: LOCUST_AUTOSTART
        value: "true"
      - name: LOCUST_BROWSER_TRAFFIC_ENABLED
        value: "true"
      - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
        value: python
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317
    resources:
      limits:
        memory: 1Gi

  paymentService:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: PAYMENT_SERVICE_PORT
        value: "8080"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317
    resources:
      limits:
        memory: 120Mi
    securityContext:
      runAsUser: 1000  # node
      runAsGroup: 1000
      runAsNonRoot: true

  productCatalogService:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: PRODUCT_CATALOG_SERVICE_PORT
        value: "8080"
      - name: FEATURE_FLAG_GRPC_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-featureflagservice:50053'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317
    resources:
      limits:
        memory: 20Mi

  quoteService:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: QUOTE_SERVICE_PORT
        value: "8080"
      - name: OTEL_PHP_AUTOLOAD_ENABLED
        value: "true"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4318
    resources:
      limits:
        memory: 40Mi
    securityContext:
      runAsUser: 33  # www-data
      runAsGroup: 33
      runAsNonRoot: true

  recommendationService:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: RECOMMENDATION_SERVICE_PORT
        value: "8080"
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
      - name: FEATURE_FLAG_GRPC_SERVICE_ADDR
        value: '{{ include "otel-demo.name" . }}-featureflagservice:50053'
      - name: OTEL_PYTHON_LOG_CORRELATION
        value: "true"
      - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
        value: python
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317
    resources:
      limits:
        memory: 500Mi            # This is high to enable supporting the recommendationCache feature flag use case

  shippingService:
    enabled: true
    useDefault:
      env: true
    service:
      port: 8080
    env:
      - name: SHIPPING_SERVICE_PORT
        value: "8080"
      - name: QUOTE_SERVICE_ADDR
        value: 'http://{{ include "otel-demo.name" . }}-quoteservice:8080'
      - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4317/v1/traces
    resources:
      limits:
        memory: 20Mi

  ffsPostgres:
    enabled: true
    useDefault:
      env: true
    replicas: 1
    ports:
      - name: postgres
        value: 5432
    env:
      - name: POSTGRES_DB
        value: ffs
      - name: POSTGRES_USER
        value: ffs
      - name: POSTGRES_PASSWORD
        value: ffs
    resources:
      limits:
        memory: 120Mi

  kafka:
    enabled: true
    useDefault:
      env: true
    replicas: 1
    ports:
      - name: plaintext
        value: 9092
      - name: controller
        value: 9093
    env:
      - name: KAFKA_ADVERTISED_LISTENERS
        value: 'PLAINTEXT://{{ include "otel-demo.name" . }}-kafka:9092'
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://$(OTEL_COLLECTOR_NAME):4318
      - name: KAFKA_HEAP_OPTS
        value: "-Xmx200M -Xms200M"
    resources:
      limits:
        memory: 500Mi
    securityContext:
      runAsUser: 1000  # appuser
      runAsGroup: 1000
      runAsNonRoot: true

  redis:
    enabled: true
    useDefault:
      env: true
    imageOverride:
      repository: "redis"
      tag: "7.2-alpine"
    replicas: 1
    ports:
      - name: redis
        value: 6379
    resources:
      limits:
        memory: 20Mi
    securityContext:
      runAsUser: 999  # redis
      runAsGroup: 1000
      runAsNonRoot: true

opentelemetry-collector:
  enabled: true
  nameOverride: otelcol
  mode: deployment
  presets:
    kubernetesAttributes:
      enabled: true
  resources:
    limits:
      memory: 200Mi
  service:
    type: ClusterIP
  ports:
    metrics:
      enabled: true
    prometheus:
      enabled: true
      containerPort: 9464
      servicePort: 9464
      protocol: TCP
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9464"
    opentelemetry_community_demo: "true"
  serviceMonitor:
    # The service monitor by default scrapes the metrics port.
    # The metrics port needs to be enabled as well.
    enabled: false

  config:
    receivers:
      otlp:
        protocols:
          http:
            # Since this collector needs to receive data from the web, enable cors for all origins
            # `allowed_origins` can be refined for your deployment domain
            cors:
              allowed_origins:
                - "http://*"
                - "https://*"

    exporters:
      ## Create an exporter to Jaeger using the standard `otlp` export format
      otlp:
        endpoint: '{{ include "otel-demo.name" . }}-jaeger-collector:4317'
        tls:
          insecure: true
      # Create an exporter to Prometheus (metrics)
      otlphttp/prometheus:
        endpoint: 'http://{{ include "otel-demo.name" . }}-prometheus-server:9090/api/v1/otlp'
        tls:
          insecure: true
      opensearch:
        logs_index: otel
        http:
          endpoint: "http://otel-demo-opensearch:9200"
          tls:
            insecure: true

    processors:
      resource:
        attributes:
        - key: service.instance.id
          from_attribute: k8s.pod.uid
          action: insert

    connectors:
      spanmetrics: {}

    service:
      pipelines:
        traces:
          processors: [memory_limiter, resource, batch]
          exporters: [otlp, debug, spanmetrics]
        metrics:
          receivers: [otlp, spanmetrics]
          processors: [memory_limiter, resource, batch]
          exporters: [otlphttp/prometheus, debug]
        logs:
          processors: [memory_limiter, resource, batch]
          exporters: [opensearch, debug]

jaeger:
  enabled: true
  provisionDataStore:
    cassandra: false
  allInOne:
    enabled: true
    args:
      - "--memory.max-traces=5000"
      - "--query.base-path=/jaeger/ui"
      - "--prometheus.server-url=http://{{ include \"otel-demo.name\" . }}-prometheus-server:9090"
      - "--prometheus.query.normalize-calls=true"
      - "--prometheus.query.normalize-duration=true"
    extraEnv:
      - name: METRICS_STORAGE_TYPE
        value: prometheus
    resources:
      limits:
        memory: 400Mi
  storage:
    type: none
  agent:
    enabled: false
  collector:
    enabled: false
  query:
    enabled: false

prometheus:
  enabled: true
  alertmanager:
    enabled: false
  configmapReload:
    prometheus:
      enabled: false
  kube-state-metrics:
    enabled: false
  prometheus-node-exporter:
    enabled: false
  prometheus-pushgateway:
    enabled: false

  server:
    extraFlags:
      - "enable-feature=exemplar-storage"
      - "enable-feature=otlp-write-receiver"
    global:
      scrape_interval: 5s
      scrape_timeout: 3s
      evaluation_interval: 30s
    persistentVolume:
      enabled: false
    service:
      servicePort: 9090
    resources:
      limits:
        memory: 300Mi

  serverFiles:
    recording_rules.yml:
      groups:
      - name: sloth-slo-sli-recordings-cartservice-availability
        rules:
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice", http_response_status_code=~"(5.*|4.*)"}[5m]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice"}[5m])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            sloth_window: 5m
            team: sre
          record: slo:sli_error:ratio_rate5m
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice", http_response_status_code=~"(5.*|4.*)"}[30m]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice"}[30m])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            sloth_window: 30m
            team: sre
          record: slo:sli_error:ratio_rate30m
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice", http_response_status_code=~"(5.*|4.*)"}[1h]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice"}[1h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            sloth_window: 1h
            team: sre
          record: slo:sli_error:ratio_rate1h
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice", http_response_status_code=~"(5.*|4.*)"}[2h]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice"}[2h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            sloth_window: 2h
            team: sre
          record: slo:sli_error:ratio_rate2h
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice", http_response_status_code=~"(5.*|4.*)"}[6h]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice"}[6h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            sloth_window: 6h
            team: sre
          record: slo:sli_error:ratio_rate6h
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice", http_response_status_code=~"(5.*|4.*)"}[1d]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice"}[1d])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            sloth_window: 1d
            team: sre
          record: slo:sli_error:ratio_rate1d
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice", http_response_status_code=~"(5.*|4.*)"}[3d]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/cartservice"}[3d])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            sloth_window: 3d
            team: sre
          record: slo:sli_error:ratio_rate3d
        - expr: |
            sum_over_time(slo:sli_error:ratio_rate5m{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"}[30d])
            / ignoring (sloth_window)
            count_over_time(slo:sli_error:ratio_rate5m{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"}[30d])
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            sloth_window: 30d
            team: sre
          record: slo:sli_error:ratio_rate30d
      - name: sloth-slo-meta-recordings-cartservice-availability
        rules:
        - expr: vector(0.9995)
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            team: sre
          record: slo:objective:ratio
        - expr: vector(1-0.9995)
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            team: sre
          record: slo:error_budget:ratio
        - expr: vector(30)
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            team: sre
          record: slo:time_period:days
        - expr: |
            slo:sli_error:ratio_rate5m{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"}
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            team: sre
          record: slo:current_burn_rate:ratio
        - expr: |
            slo:sli_error:ratio_rate30d{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"}
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            team: sre
          record: slo:period_burn_rate:ratio
        - expr: 1 - slo:period_burn_rate:ratio{sloth_id="cartservice-availability",
            sloth_service="cartservice", sloth_slo="availability"}
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_service: cartservice
            sloth_slo: availability
            team: sre
          record: slo:period_error_budget_remaining:ratio
        - expr: vector(1)
          labels:
            app: cartservice
            sloth_id: cartservice-availability
            sloth_mode: ctrl-gen-k8s
            sloth_objective: "99.95"
            sloth_service: cartservice
            sloth_slo: availability
            sloth_spec: sloth.slok.dev/v1
            sloth_version: v0.11.0
            team: sre
          record: sloth_slo_info
      - name: sloth-slo-alerts-cartservice-availability
        rules:
        - alert: cartserviceHighErrorRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: availability of cartservice below SLO level
            title: (page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate5m{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"} > (14.4 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1h{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"} > (14.4 * 0.0004999999999999716)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate30m{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"} > (6 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate6h{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"} > (6 * 0.0004999999999999716)) without (sloth_window)
            )
          labels:
            category: availability
            sloth_severity: page
        - alert: cartserviceHighErrorRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: availability of cartservice below SLO level
            title: (ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate2h{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"} > (3 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1d{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"} > (3 * 0.0004999999999999716)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate6h{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"} > (1 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate3d{sloth_id="cartservice-availability", sloth_service="cartservice", sloth_slo="availability"} > (1 * 0.0004999999999999716)) without (sloth_window)
            )
          labels:
            category: availability
            sloth_severity: ticket
      - name: sloth-slo-sli-recordings-cartservice-latency-1s
        rules:
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[5m])) - sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="1000"}[5m])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[5m])) > 0
            OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            sloth_window: 5m
            team: sre
          record: slo:sli_error:ratio_rate5m
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[30m])) - sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="1000"}[30m])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[30m])) > 0
            OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            sloth_window: 30m
            team: sre
          record: slo:sli_error:ratio_rate30m
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[1h])) - sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="1000"}[1h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[1h])) > 0
            OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            sloth_window: 1h
            team: sre
          record: slo:sli_error:ratio_rate1h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[2h])) - sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="1000"}[2h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[2h])) > 0
            OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            sloth_window: 2h
            team: sre
          record: slo:sli_error:ratio_rate2h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[6h])) - sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="1000"}[6h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[6h])) > 0
            OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            sloth_window: 6h
            team: sre
          record: slo:sli_error:ratio_rate6h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[1d])) - sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="1000"}[1d])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[1d])) > 0
            OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            sloth_window: 1d
            team: sre
          record: slo:sli_error:ratio_rate1d
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[3d])) - sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="1000"}[3d])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="cartservice",  le="+Inf"}[3d])) > 0
            OR on() vector(0)
            )
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            sloth_window: 3d
            team: sre
          record: slo:sli_error:ratio_rate3d
        - expr: |
            sum_over_time(slo:sli_error:ratio_rate5m{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"}[30d])
            / ignoring (sloth_window)
            count_over_time(slo:sli_error:ratio_rate5m{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"}[30d])
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            sloth_window: 30d
            team: sre
          record: slo:sli_error:ratio_rate30d
      - name: sloth-slo-meta-recordings-cartservice-latency-1s
        rules:
        - expr: vector(0.98)
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            team: sre
          record: slo:objective:ratio
        - expr: vector(1-0.98)
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            team: sre
          record: slo:error_budget:ratio
        - expr: vector(30)
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            team: sre
          record: slo:time_period:days
        - expr: |
            slo:sli_error:ratio_rate5m{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"}
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            team: sre
          record: slo:current_burn_rate:ratio
        - expr: |
            slo:sli_error:ratio_rate30d{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"}
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            team: sre
          record: slo:period_burn_rate:ratio
        - expr: 1 - slo:period_burn_rate:ratio{sloth_id="cartservice-latency-1s", sloth_service="cartservice",
            sloth_slo="latency-1s"}
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_service: cartservice
            sloth_slo: latency-1s
            team: sre
          record: slo:period_error_budget_remaining:ratio
        - expr: vector(1)
          labels:
            app: cartservice
            sloth_id: cartservice-latency-1s
            sloth_mode: ctrl-gen-k8s
            sloth_objective: "98"
            sloth_service: cartservice
            sloth_slo: latency-1s
            sloth_spec: sloth.slok.dev/v1
            sloth_version: v0.11.0
            team: sre
          record: sloth_slo_info
      - name: sloth-slo-alerts-cartservice-latency-1s
        rules:
        - alert: cartserviceHighLatencyRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: latency-1s of cartservice below SLO level
            title: (page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate5m{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"} > (14.4 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1h{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"} > (14.4 * 0.02)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate30m{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"} > (6 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate6h{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"} > (6 * 0.02)) without (sloth_window)
            )
          labels:
            category: latency-1s
            sloth_severity: page
        - alert: cartserviceHighLatencyRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: latency-1s of cartservice below SLO level
            title: (ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate2h{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"} > (3 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1d{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"} > (3 * 0.02)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate6h{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"} > (1 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate3d{sloth_id="cartservice-latency-1s", sloth_service="cartservice", sloth_slo="latency-1s"} > (1 * 0.02)) without (sloth_window)
            )
          labels:
            category: latency-1s
            sloth_severity: ticket
      - name: sloth-slo-sli-recordings-productcatalogservice-availability
        rules:
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice", http_response_status_code=~"(5.*|4.*)"}[5m]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice"}[5m])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            sloth_window: 5m
            team: sre
          record: slo:sli_error:ratio_rate5m
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice", http_response_status_code=~"(5.*|4.*)"}[30m]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice"}[30m])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            sloth_window: 30m
            team: sre
          record: slo:sli_error:ratio_rate30m
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice", http_response_status_code=~"(5.*|4.*)"}[1h]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice"}[1h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            sloth_window: 1h
            team: sre
          record: slo:sli_error:ratio_rate1h
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice", http_response_status_code=~"(5.*|4.*)"}[2h]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice"}[2h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            sloth_window: 2h
            team: sre
          record: slo:sli_error:ratio_rate2h
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice", http_response_status_code=~"(5.*|4.*)"}[6h]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice"}[6h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            sloth_window: 6h
            team: sre
          record: slo:sli_error:ratio_rate6h
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice", http_response_status_code=~"(5.*|4.*)"}[1d]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice"}[1d])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            sloth_window: 1d
            team: sre
          record: slo:sli_error:ratio_rate1d
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice", http_response_status_code=~"(5.*|4.*)"}[3d]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/productcatalogservice"}[3d])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            sloth_window: 3d
            team: sre
          record: slo:sli_error:ratio_rate3d
        - expr: |
            sum_over_time(slo:sli_error:ratio_rate5m{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"}[30d])
            / ignoring (sloth_window)
            count_over_time(slo:sli_error:ratio_rate5m{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"}[30d])
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            sloth_window: 30d
            team: sre
          record: slo:sli_error:ratio_rate30d
      - name: sloth-slo-meta-recordings-productcatalogservice-availability
        rules:
        - expr: vector(0.9995)
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            team: sre
          record: slo:objective:ratio
        - expr: vector(1-0.9995)
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            team: sre
          record: slo:error_budget:ratio
        - expr: vector(30)
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            team: sre
          record: slo:time_period:days
        - expr: |
            slo:sli_error:ratio_rate5m{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"}
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            team: sre
          record: slo:current_burn_rate:ratio
        - expr: |
            slo:sli_error:ratio_rate30d{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"}
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            team: sre
          record: slo:period_burn_rate:ratio
        - expr: 1 - slo:period_burn_rate:ratio{sloth_id="productcatalogservice-availability",
            sloth_service="productcatalogservice", sloth_slo="availability"}
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_service: productcatalogservice
            sloth_slo: availability
            team: sre
          record: slo:period_error_budget_remaining:ratio
        - expr: vector(1)
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-availability
            sloth_mode: ctrl-gen-k8s
            sloth_objective: "99.95"
            sloth_service: productcatalogservice
            sloth_slo: availability
            sloth_spec: sloth.slok.dev/v1
            sloth_version: v0.11.0
            team: sre
          record: sloth_slo_info
      - name: sloth-slo-alerts-productcatalogservice-availability
        rules:
        - alert: productcatalogserviceHighErrorRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: availability of productcatalogservice below SLO level
            title: (page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate5m{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"} > (14.4 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1h{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"} > (14.4 * 0.0004999999999999716)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate30m{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"} > (6 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate6h{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"} > (6 * 0.0004999999999999716)) without (sloth_window)
            )
          labels:
            category: availability
            sloth_severity: page
        - alert: productcatalogserviceHighErrorRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: availability of productcatalogservice below SLO level
            title: (ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate2h{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"} > (3 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1d{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"} > (3 * 0.0004999999999999716)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate6h{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"} > (1 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate3d{sloth_id="productcatalogservice-availability", sloth_service="productcatalogservice", sloth_slo="availability"} > (1 * 0.0004999999999999716)) without (sloth_window)
            )
          labels:
            category: availability
            sloth_severity: ticket
      - name: sloth-slo-sli-recordings-productcatalogservice-latency-1s
        rules:
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[5m])) - sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="1000"}[5m])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[5m])) > 0
            OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            sloth_window: 5m
            team: sre
          record: slo:sli_error:ratio_rate5m
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[30m])) - sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="1000"}[30m])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[30m])) > 0
            OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            sloth_window: 30m
            team: sre
          record: slo:sli_error:ratio_rate30m
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[1h])) - sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="1000"}[1h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[1h])) > 0
            OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            sloth_window: 1h
            team: sre
          record: slo:sli_error:ratio_rate1h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[2h])) - sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="1000"}[2h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[2h])) > 0
            OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            sloth_window: 2h
            team: sre
          record: slo:sli_error:ratio_rate2h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[6h])) - sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="1000"}[6h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[6h])) > 0
            OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            sloth_window: 6h
            team: sre
          record: slo:sli_error:ratio_rate6h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[1d])) - sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="1000"}[1d])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[1d])) > 0
            OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            sloth_window: 1d
            team: sre
          record: slo:sli_error:ratio_rate1d
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[3d])) - sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="1000"}[3d])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="productcatalogservice",  le="+Inf"}[3d])) > 0
            OR on() vector(0)
            )
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            sloth_window: 3d
            team: sre
          record: slo:sli_error:ratio_rate3d
        - expr: |
            sum_over_time(slo:sli_error:ratio_rate5m{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"}[30d])
            / ignoring (sloth_window)
            count_over_time(slo:sli_error:ratio_rate5m{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"}[30d])
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            sloth_window: 30d
            team: sre
          record: slo:sli_error:ratio_rate30d
      - name: sloth-slo-meta-recordings-productcatalogservice-latency-1s
        rules:
        - expr: vector(0.98)
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            team: sre
          record: slo:objective:ratio
        - expr: vector(1-0.98)
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            team: sre
          record: slo:error_budget:ratio
        - expr: vector(30)
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            team: sre
          record: slo:time_period:days
        - expr: |
            slo:sli_error:ratio_rate5m{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"}
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            team: sre
          record: slo:current_burn_rate:ratio
        - expr: |
            slo:sli_error:ratio_rate30d{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"}
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            team: sre
          record: slo:period_burn_rate:ratio
        - expr: 1 - slo:period_burn_rate:ratio{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice",
            sloth_slo="latency-1s"}
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            team: sre
          record: slo:period_error_budget_remaining:ratio
        - expr: vector(1)
          labels:
            app: productcatalogservice
            sloth_id: productcatalogservice-latency-1s
            sloth_mode: ctrl-gen-k8s
            sloth_objective: "98"
            sloth_service: productcatalogservice
            sloth_slo: latency-1s
            sloth_spec: sloth.slok.dev/v1
            sloth_version: v0.11.0
            team: sre
          record: sloth_slo_info
      - name: sloth-slo-alerts-productcatalogservice-latency-1s
        rules:
        - alert: productcatalogserviceHighLatencyRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: latency-1s of productcatalogservice below SLO level
            title: (page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate5m{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"} > (14.4 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1h{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"} > (14.4 * 0.02)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate30m{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"} > (6 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate6h{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"} > (6 * 0.02)) without (sloth_window)
            )
          labels:
            category: latency-1s
            sloth_severity: page
        - alert: productcatalogserviceHighLatencyRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: latency-1s of productcatalogservice below SLO level
            title: (ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate2h{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"} > (3 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1d{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"} > (3 * 0.02)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate6h{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"} > (1 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate3d{sloth_id="productcatalogservice-latency-1s", sloth_service="productcatalogservice", sloth_slo="latency-1s"} > (1 * 0.02)) without (sloth_window)
            )
          labels:
            category: latency-1s
            sloth_severity: ticket
      - name: sloth-slo-sli-recordings-frontend-availability
        rules:
        - expr: |-
            ((
              sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend", status=~"(5.*|4.*)"}[5m]))
              /
              (sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend"}[5m])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            sloth_window: 5m
            team: sre
          record: slo:sli_error:ratio_rate5m
        - expr: |-
            ((
              sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend", status=~"(5.*|4.*)"}[30m]))
              /
              (sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend"}[30m])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            sloth_window: 30m
            team: sre
          record: slo:sli_error:ratio_rate30m
        - expr: |-
            ((
              sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend", status=~"(5.*|4.*)"}[1h]))
              /
              (sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend"}[1h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            sloth_window: 1h
            team: sre
          record: slo:sli_error:ratio_rate1h
        - expr: |-
            ((
              sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend", status=~"(5.*|4.*)"}[2h]))
              /
              (sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend"}[2h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            sloth_window: 2h
            team: sre
          record: slo:sli_error:ratio_rate2h
        - expr: |-
            ((
              sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend", status=~"(5.*|4.*)"}[6h]))
              /
              (sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend"}[6h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            sloth_window: 6h
            team: sre
          record: slo:sli_error:ratio_rate6h
        - expr: |-
            ((
              sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend", status=~"(5.*|4.*)"}[1d]))
              /
              (sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend"}[1d])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            sloth_window: 1d
            team: sre
          record: slo:sli_error:ratio_rate1d
        - expr: |-
            ((
              sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend", status=~"(5.*|4.*)"}[3d]))
              /
              (sum(rate(app_frontend_requests_total{job="opentelemetry-demo/frontend"}[3d])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            sloth_window: 3d
            team: sre
          record: slo:sli_error:ratio_rate3d
        - expr: |
            sum_over_time(slo:sli_error:ratio_rate5m{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"}[30d])
            / ignoring (sloth_window)
            count_over_time(slo:sli_error:ratio_rate5m{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"}[30d])
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            sloth_window: 30d
            team: sre
          record: slo:sli_error:ratio_rate30d
      - name: sloth-slo-meta-recordings-frontend-availability
        rules:
        - expr: vector(0.9995)
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            team: sre
          record: slo:objective:ratio
        - expr: vector(1-0.9995)
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            team: sre
          record: slo:error_budget:ratio
        - expr: vector(30)
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            team: sre
          record: slo:time_period:days
        - expr: |
            slo:sli_error:ratio_rate5m{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"}
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            team: sre
          record: slo:current_burn_rate:ratio
        - expr: |
            slo:sli_error:ratio_rate30d{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"}
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            team: sre
          record: slo:period_burn_rate:ratio
        - expr: 1 - slo:period_burn_rate:ratio{sloth_id="frontend-availability",
            sloth_service="frontend", sloth_slo="availability"}
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_service: frontend
            sloth_slo: availability
            team: sre
          record: slo:period_error_budget_remaining:ratio
        - expr: vector(1)
          labels:
            app: frontend
            sloth_id: frontend-availability
            sloth_mode: ctrl-gen-k8s
            sloth_objective: "99.95"
            sloth_service: frontend
            sloth_slo: availability
            sloth_spec: sloth.slok.dev/v1
            sloth_version: v0.11.0
            team: sre
          record: sloth_slo_info
      - name: sloth-slo-alerts-frontend-availability
        rules:
        - alert: frontendHighErrorRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: availability of frontend below SLO level
            title: (page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate5m{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"} > (14.4 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1h{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"} > (14.4 * 0.0004999999999999716)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate30m{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"} > (6 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate6h{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"} > (6 * 0.0004999999999999716)) without (sloth_window)
            )
          labels:
            category: availability
            sloth_severity: page
        - alert: frontendHighErrorRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: availability of frontend below SLO level
            title: (ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate2h{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"} > (3 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1d{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"} > (3 * 0.0004999999999999716)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate6h{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"} > (1 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate3d{sloth_id="frontend-availability", sloth_service="frontend", sloth_slo="availability"} > (1 * 0.0004999999999999716)) without (sloth_window)
            )
          labels:
            category: availability
            sloth_severity: ticket
      - name: sloth-slo-sli-recordings-frontend-latency-1s
        rules:
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[5m])) - sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="1000"}[5m])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[5m])) > 0
            OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            sloth_window: 5m
            team: sre
          record: slo:sli_error:ratio_rate5m
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[30m])) - sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="1000"}[30m])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[30m])) > 0
            OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            sloth_window: 30m
            team: sre
          record: slo:sli_error:ratio_rate30m
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[1h])) - sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="1000"}[1h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[1h])) > 0
            OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            sloth_window: 1h
            team: sre
          record: slo:sli_error:ratio_rate1h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[2h])) - sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="1000"}[2h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[2h])) > 0
            OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            sloth_window: 2h
            team: sre
          record: slo:sli_error:ratio_rate2h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[6h])) - sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="1000"}[6h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[6h])) > 0
            OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            sloth_window: 6h
            team: sre
          record: slo:sli_error:ratio_rate6h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[1d])) - sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="1000"}[1d])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[1d])) > 0
            OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            sloth_window: 1d
            team: sre
          record: slo:sli_error:ratio_rate1d
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[3d])) - sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="1000"}[3d])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="frontend",  le="+Inf"}[3d])) > 0
            OR on() vector(0)
            )
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            sloth_window: 3d
            team: sre
          record: slo:sli_error:ratio_rate3d
        - expr: |
            sum_over_time(slo:sli_error:ratio_rate5m{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"}[30d])
            / ignoring (sloth_window)
            count_over_time(slo:sli_error:ratio_rate5m{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"}[30d])
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            sloth_window: 30d
            team: sre
          record: slo:sli_error:ratio_rate30d
      - name: sloth-slo-meta-recordings-frontend-latency-1s
        rules:
        - expr: vector(0.98)
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            team: sre
          record: slo:objective:ratio
        - expr: vector(1-0.98)
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            team: sre
          record: slo:error_budget:ratio
        - expr: vector(30)
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            team: sre
          record: slo:time_period:days
        - expr: |
            slo:sli_error:ratio_rate5m{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"}
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            team: sre
          record: slo:current_burn_rate:ratio
        - expr: |
            slo:sli_error:ratio_rate30d{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"}
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            team: sre
          record: slo:period_burn_rate:ratio
        - expr: 1 - slo:period_burn_rate:ratio{sloth_id="frontend-latency-1s", sloth_service="frontend",
            sloth_slo="latency-1s"}
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_service: frontend
            sloth_slo: latency-1s
            team: sre
          record: slo:period_error_budget_remaining:ratio
        - expr: vector(1)
          labels:
            app: frontend
            sloth_id: frontend-latency-1s
            sloth_mode: ctrl-gen-k8s
            sloth_objective: "98"
            sloth_service: frontend
            sloth_slo: latency-1s
            sloth_spec: sloth.slok.dev/v1
            sloth_version: v0.11.0
            team: sre
          record: sloth_slo_info
      - name: sloth-slo-alerts-frontend-latency-1s
        rules:
        - alert: frontendHighLatencyRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: latency-1s of frontend below SLO level
            title: (page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate5m{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"} > (14.4 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1h{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"} > (14.4 * 0.02)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate30m{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"} > (6 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate6h{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"} > (6 * 0.02)) without (sloth_window)
            )
          labels:
            category: latency-1s
            sloth_severity: page
        - alert: frontendHighLatencyRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: latency-1s of frontend below SLO level
            title: (ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate2h{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"} > (3 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1d{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"} > (3 * 0.02)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate6h{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"} > (1 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate3d{sloth_id="frontend-latency-1s", sloth_service="frontend", sloth_slo="latency-1s"} > (1 * 0.02)) without (sloth_window)
            )
          labels:
            category: latency-1s
            sloth_severity: ticket
      - name: sloth-slo-sli-recordings-checkoutservice-availability
        rules:
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice", http_response_status_code=~"(5.*|4.*)"}[5m]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice"}[5m])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            sloth_window: 5m
            team: sre
          record: slo:sli_error:ratio_rate5m
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice", http_response_status_code=~"(5.*|4.*)"}[30m]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice"}[30m])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            sloth_window: 30m
            team: sre
          record: slo:sli_error:ratio_rate30m
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice", http_response_status_code=~"(5.*|4.*)"}[1h]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice"}[1h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            sloth_window: 1h
            team: sre
          record: slo:sli_error:ratio_rate1h
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice", http_response_status_code=~"(5.*|4.*)"}[2h]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice"}[2h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            sloth_window: 2h
            team: sre
          record: slo:sli_error:ratio_rate2h
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice", http_response_status_code=~"(5.*|4.*)"}[6h]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice"}[6h])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            sloth_window: 6h
            team: sre
          record: slo:sli_error:ratio_rate6h
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice", http_response_status_code=~"(5.*|4.*)"}[1d]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice"}[1d])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            sloth_window: 1d
            team: sre
          record: slo:sli_error:ratio_rate1d
        - expr: |-
            ((
              sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice", http_response_status_code=~"(5.*|4.*)"}[3d]))
              /
              (sum(rate(http_server_request_duration_seconds_count{job="opentelemetry-demo/checkoutservice"}[3d])) > 0)
            ) OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            sloth_window: 3d
            team: sre
          record: slo:sli_error:ratio_rate3d
        - expr: |
            sum_over_time(slo:sli_error:ratio_rate5m{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"}[30d])
            / ignoring (sloth_window)
            count_over_time(slo:sli_error:ratio_rate5m{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"}[30d])
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            sloth_window: 30d
            team: sre
          record: slo:sli_error:ratio_rate30d
      - name: sloth-slo-meta-recordings-checkoutservice-availability
        rules:
        - expr: vector(0.9995)
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            team: sre
          record: slo:objective:ratio
        - expr: vector(1-0.9995)
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            team: sre
          record: slo:error_budget:ratio
        - expr: vector(30)
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            team: sre
          record: slo:time_period:days
        - expr: |
            slo:sli_error:ratio_rate5m{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"}
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            team: sre
          record: slo:current_burn_rate:ratio
        - expr: |
            slo:sli_error:ratio_rate30d{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"}
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            team: sre
          record: slo:period_burn_rate:ratio
        - expr: 1 - slo:period_burn_rate:ratio{sloth_id="checkoutservice-availability",
            sloth_service="checkoutservice", sloth_slo="availability"}
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_service: checkoutservice
            sloth_slo: availability
            team: sre
          record: slo:period_error_budget_remaining:ratio
        - expr: vector(1)
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-availability
            sloth_mode: ctrl-gen-k8s
            sloth_objective: "99.95"
            sloth_service: checkoutservice
            sloth_slo: availability
            sloth_spec: sloth.slok.dev/v1
            sloth_version: v0.11.0
            team: sre
          record: sloth_slo_info
      - name: sloth-slo-alerts-checkoutservice-availability
        rules:
        - alert: checkoutserviceHighErrorRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: availability of checkoutservice below SLO level
            title: (page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate5m{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"} > (14.4 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1h{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"} > (14.4 * 0.0004999999999999716)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate30m{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"} > (6 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate6h{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"} > (6 * 0.0004999999999999716)) without (sloth_window)
            )
          labels:
            category: availability
            sloth_severity: page
        - alert: checkoutserviceHighErrorRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: availability of checkoutservice below SLO level
            title: (ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate2h{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"} > (3 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1d{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"} > (3 * 0.0004999999999999716)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate6h{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"} > (1 * 0.0004999999999999716)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate3d{sloth_id="checkoutservice-availability", sloth_service="checkoutservice", sloth_slo="availability"} > (1 * 0.0004999999999999716)) without (sloth_window)
            )
          labels:
            category: availability
            sloth_severity: ticket
      - name: sloth-slo-sli-recordings-checkoutservice-latency-1s
        rules:
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[5m])) - sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="1000"}[5m])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[5m])) > 0
            OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            sloth_window: 5m
            team: sre
          record: slo:sli_error:ratio_rate5m
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[30m])) - sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="1000"}[30m])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[30m])) > 0
            OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            sloth_window: 30m
            team: sre
          record: slo:sli_error:ratio_rate30m
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[1h])) - sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="1000"}[1h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[1h])) > 0
            OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            sloth_window: 1h
            team: sre
          record: slo:sli_error:ratio_rate1h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[2h])) - sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="1000"}[2h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[2h])) > 0
            OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            sloth_window: 2h
            team: sre
          record: slo:sli_error:ratio_rate2h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[6h])) - sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="1000"}[6h])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[6h])) > 0
            OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            sloth_window: 6h
            team: sre
          record: slo:sli_error:ratio_rate6h
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[1d])) - sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="1000"}[1d])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[1d])) > 0
            OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            sloth_window: 1d
            team: sre
          record: slo:sli_error:ratio_rate1d
        - expr: |-
            ((sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[3d])) - sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="1000"}[3d])))
            /
            sum(increase(duration_milliseconds_bucket{service_name="checkoutservice",  le="+Inf"}[3d])) > 0
            OR on() vector(0)
            )
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            sloth_window: 3d
            team: sre
          record: slo:sli_error:ratio_rate3d
        - expr: |
            sum_over_time(slo:sli_error:ratio_rate5m{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"}[30d])
            / ignoring (sloth_window)
            count_over_time(slo:sli_error:ratio_rate5m{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"}[30d])
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            sloth_window: 30d
            team: sre
          record: slo:sli_error:ratio_rate30d
      - name: sloth-slo-meta-recordings-checkoutservice-latency-1s
        rules:
        - expr: vector(0.98)
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            team: sre
          record: slo:objective:ratio
        - expr: vector(1-0.98)
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            team: sre
          record: slo:error_budget:ratio
        - expr: vector(30)
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            team: sre
          record: slo:time_period:days
        - expr: |
            slo:sli_error:ratio_rate5m{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"}
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            team: sre
          record: slo:current_burn_rate:ratio
        - expr: |
            slo:sli_error:ratio_rate30d{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"}
            / on(sloth_id, sloth_slo, sloth_service) group_left
            slo:error_budget:ratio{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"}
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            team: sre
          record: slo:period_burn_rate:ratio
        - expr: 1 - slo:period_burn_rate:ratio{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice",
            sloth_slo="latency-1s"}
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            team: sre
          record: slo:period_error_budget_remaining:ratio
        - expr: vector(1)
          labels:
            app: checkoutservice
            sloth_id: checkoutservice-latency-1s
            sloth_mode: ctrl-gen-k8s
            sloth_objective: "98"
            sloth_service: checkoutservice
            sloth_slo: latency-1s
            sloth_spec: sloth.slok.dev/v1
            sloth_version: v0.11.0
            team: sre
          record: sloth_slo_info
      - name: sloth-slo-alerts-checkoutservice-latency-1s
        rules:
        - alert: checkoutserviceHighLatencyRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: latency-1s of checkoutservice below SLO level
            title: (page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate5m{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"} > (14.4 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1h{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"} > (14.4 * 0.02)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate30m{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"} > (6 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate6h{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"} > (6 * 0.02)) without (sloth_window)
            )
          labels:
            category: latency-1s
            sloth_severity: page
        - alert: checkoutserviceHighLatencyRate
          annotations:
            alert_type: SLO
            playbook: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
            summary: latency-1s of checkoutservice below SLO level
            title: (ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error
              budget burn rate is too fast.
          expr: |
            (
                max(slo:sli_error:ratio_rate2h{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"} > (3 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate1d{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"} > (3 * 0.02)) without (sloth_window)
            )
            or
            (
                max(slo:sli_error:ratio_rate6h{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"} > (1 * 0.02)) without (sloth_window)
                and
                max(slo:sli_error:ratio_rate3d{sloth_id="checkoutservice-latency-1s", sloth_service="checkoutservice", sloth_slo="latency-1s"} > (1 * 0.02)) without (sloth_window)
            )
          labels:
            category: latency-1s
            sloth_severity: ticket






    prometheus.yml:
      scrape_configs:
        - job_name: prometheus
          honor_labels: true
          metrics_path: /metrics
          scheme: http
          static_configs:
            - targets:
              - localhost:9090
        - job_name: otelcol-metrics
          static_configs:
            - targets:
                - opentelemetry-demo-otelcol:8888

grafana:
  enabled: true
  grafana.ini:
    auth:
      disable_login_form: true
    auth.anonymous:
      enabled: true
      org_name: Main Org.
      org_role: Admin
    server:
      root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana"
      serve_from_sub_path: true
  adminPassword: admin
  plugins:
    - grafana-opensearch-datasource
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          uid: webstore-metrics
          type: prometheus
          url: 'http://{{ include "otel-demo.name" . }}-prometheus-server:9090'
          editable: true
          isDefault: true
          jsonData:
            exemplarTraceIdDestinations:
              - datasourceUid: webstore-traces
                name: trace_id

              - url: http://localhost:8080/jaeger/ui/trace/$${__value.raw}
                name: trace_id
                urlDisplayLabel: View in Jaeger UI

        - name: Jaeger
          uid: webstore-traces
          type: jaeger
          url: 'http://{{ include "otel-demo.name" . }}-jaeger-query:16686/jaeger/ui'
          editable: true
          isDefault: false

        - name: OpenSearch
          type: grafana-opensearch-datasource
          url: 'http://otel-demo-opensearch:9200/'
          access: proxy
          editable: true
          isDefault: false
          jsonData:
            database: otel
            flavor: opensearch
            logLevelField: severity
            logMessageField: body
            pplEnabled: true
            timeField: observedTimestamp
            version: 2.11.1
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboardsConfigMaps:
    default: '{{ include "otel-demo.name" . }}-grafana-dashboards'
  resources:
    limits:
      memory: 150Mi

opensearch:
  enabled: true
  fullnameOverride: otel-demo-opensearch
  clusterName: demo-cluster
  nodeGroup: otel-demo
  singleNode: true
  opensearchJavaOpts: "-Xms300m -Xmx300m"
  persistence:
    enabled: false
  extraEnvs:
    - name: "bootstrap.memory_lock"
      value: "true"
    - name: "DISABLE_INSTALL_DEMO_CONFIG"
      value: "true"
    - name: "DISABLE_SECURITY_PLUGIN"
      value: "true"
  resources:
    limits:
      memory: 1Gi